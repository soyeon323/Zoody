<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="document">

	<insert id="upload">
		
		INSERT INTO DOCUMENT(
		    "NO",
			"SCOPE",
			DIRECTORY_NO,
			FILE_NAME,
			EXTENSION
		    )
		VALUES(
	    SEQ_DOCUMENT_NO.NEXTVAL , 
	    #{scope},
	    #{directoryNo},
	    #{fileName} , 
	    #{extension} 
	    )    
		
	</insert>
	
	 <select id="getDocumenListCnt" resultType="int">
	    SELECT COUNT(*) AS total_rows
	    FROM DOCUMENT d
	    LEFT JOIN "DIRECTORY" dt ON d.DIRECTORY_NO = dt."NO"
	    LEFT JOIN "USER" u ON dt.USER_NO = u."NO"
	    <where>
	        <!-- 검색 조건이 제목일 때, 제목에 해당하는 문서만 조회합니다. -->
	        <if test="searchType == 'fileName'">
	            AND d.FILE_NAME LIKE '%' || #{searchValue} || '%'
	        </if>
	        <!-- 검색 조건이 작성자일 때, 작성자에 해당하는 문서만 조회합니다. -->
	        <if test="searchType == 'name'">
	            AND u.NAME LIKE '%' || #{searchValue} || '%'
	        </if>
	        
	        <if test="searchType == 'extension'">
	            AND d.EXTENSION LIKE '%' || #{searchValue} || '%'
	        </if>
	        <!-- 다른 검색 조건이 추가되는 경우에도 if 태그를 추가하여 조건에 따른 쿼리를 작성할 수 있습니다. -->
	        AND d.STATUS = 'O'
	        AND d."SCOPE" = #{scope}
	    </where>
	</select>

	
	
	<select id="getDocumentList" resultType="DocumentVo" parameterType="java.util.Map">
	    SELECT ROWNUM, result."NO", result."SCOPE", result.USER_NO, result."NAME",
	           result.DIRECTORY_NO, result.DIRECTORY_NAME, result.FILE_NAME,
	           result.EXTENSION, result.ENROLL_DATE, result.MODIFY_DATE
	    FROM (
	        SELECT d."NO",
	               d."SCOPE",
	               dt.USER_NO,
	               u."NAME",
	               d.DIRECTORY_NO,
	               dt.DIRECTORY_NAME,
	               d.FILE_NAME,
	               d.EXTENSION,
	               d.ENROLL_DATE,
	               d.MODIFY_DATE
	        FROM DOCUMENT d
	        LEFT JOIN "DIRECTORY" dt ON d.DIRECTORY_NO = dt."NO"
	        LEFT JOIN "USER" u ON dt.USER_NO = u."NO"
	        <where>
	            <!-- 검색 조건이 제목일 때, 제목에 해당하는 문서만 조회합니다. -->
		        <if test="searchType == 'fileName'">
		            AND d.FILE_NAME LIKE '%' || #{searchValue} || '%'
		        </if>
		        <!-- 검색 조건이 작성자일 때, 작성자에 해당하는 문서만 조회합니다. -->
		        <if test="searchType == 'name'">
		            AND u.NAME LIKE '%' || #{searchValue} || '%'
		        </if>
		        
		        <if test="searchType == 'extension'">
		            AND d.EXTENSION LIKE '%' || #{searchValue} || '%'
		        </if>
	            AND d.STATUS = 'O'
	            AND d."SCOPE" = #{scope}
	        </where>
	        ORDER BY d."NO" 
	    ) result
	    ORDER BY ROWNUM DESC
	</select>


	
	<select id="getNewDocument" resultType="DocumentVo">
		SELECT ROWNUM, result."NO", result."SCOPE", result.USER_NO, result."NAME",
	           result.DIRECTORY_NO, result.DIRECTORY_NAME, result.FILE_NAME,
	           result.EXTENSION, result.ENROLL_DATE, result.MODIFY_DATE
	    FROM (
	        SELECT d."NO",
	               d."SCOPE",
	               dt.USER_NO,
	               u."NAME",
	               d.DIRECTORY_NO,
	               dt.DIRECTORY_NAME,
	               d.FILE_NAME,
	               d.EXTENSION,
	               d.ENROLL_DATE,
	               d.MODIFY_DATE
	        FROM DOCUMENT d
	        LEFT JOIN "DIRECTORY" dt ON d.DIRECTORY_NO = dt."NO"
	        LEFT JOIN "USER" u ON dt.USER_NO = u."NO"
	       
	        WHERE d.STATUS = 'O'
            AND SCOPE  = #{scope}
            
	        ORDER BY d."NO" DESC
	    ) result
        WHERE ROWNUM = 1
	    ORDER BY ROWNUM 
	</select>

  	<select id="getLoginMemberDirectory" resultType="DocumentVo">
  		
  		SELECT 
		    ROWNUM,
		    NO,
		    USER_NO,
		    DIRECTORY_NAME,
		    STATUS
		FROM (
		    SELECT 
		        NO,
		        USER_NO,
		        DIRECTORY_NAME,
		        STATUS
		    FROM "DIRECTORY"
		    ORDER BY NO 
		) 
		WHERE USER_NO = #{loginMemberNo}
		
  	</select>
  	
  	<insert id="newDirctory" >
  		
  		INSERT INTO "DIRECTORY" (
  			NO,
  			USER_NO,
  			DIRECTORY_NAME
  		)
  		VALUES (
  			SEQ_DIRECTORY_NO.NEXTVAL,	
  			#{userNo},
  			#{directoryName}  			
  		)
  		
  	
  	</insert>
  	
  	<select id="getNewDirctoryInfo" resultType="DocumentVo">
  		
  		SELECT 
		    ROWNUM,
		    NO,
		    USER_NO,
		    DIRECTORY_NAME,
		    STATUS
		FROM (
		    SELECT 
		        NO,
		        USER_NO,
		        DIRECTORY_NAME,
		        STATUS
		    FROM "DIRECTORY"
		    ORDER BY NO DESC
		) 
		WHERE USER_NO = #{userNo}
        AND STATUS = 'O'
        AND ROWNUM = 1
        
  	</select>
  	
  	
</mapper>
















