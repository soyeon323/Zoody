<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mail">

	<insert id="insertMail">
	
		<selectKey resultType="String" keyProperty="no" order="BEFORE">
			SELECT SEQ_MAIL_NO.NEXTVAL
			FROM DUAL
		</selectKey>
		
		INSERT INTO MAIL
		(
			NO,
			SENDER,
			PREV_NO,
			MAILBOX_NO,
			TITLE,
			CONTENT,
			SEND_DATE
		)
		VALUES
		(
			#{no},
			#{sender},
			#{prevNo},
			#{mailboxNo},
			#{title},
			#{content},
			DEFAULT
		)
		
	</insert>
	
	
	<insert id="insertRecipient" parameterType="java.util.List">
	
		<foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM SYS.DUAL" separator=" " >
			INTO MAIL_RECIPIENT
			(
			    MAIL_NO,
			    RECEIVER_NO,
			    READ_CHECK,
			    BOOKMARK_CHECK,
			    DELETE_CHECK
			)
			VALUES
			(
			    #{item.mailNo},
			    (SELECT NO FROM "USER" WHERE MAIL = #{item.receiverNo}),
			    DEFAULT,
			    DEFAULT,
			    DEFAULT
			)
		</foreach>
		
	</insert>
	
	
	<insert id="insertCc" parameterType="java.util.List">
	
		
		<foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM SYS.DUAL" separator=" " >
			INTO MAIL_CC
			(
			    MAIL_NO,
				CC_NO,
				BCC_CHECK
			)
			VALUES
			(
			    #{item.mailNo},
			    (SELECT NO FROM "USER" WHERE MAIL = #{item.ccNo}),
			    <choose>
			    	<when test="item.bccCheck == null">default</when>
			    	<when test="item.bccCheck != null">#{item.bccCheck}</when>
			    </choose>
			)
		</foreach>
		
	</insert>
	
	
	<select id="getAllMail" resultType="MailVo">
	
		SELECT 
		    DISTINCT M.NO,
		    "USER".NAME AS SENDER_NAME,
		    "USER".MAIL AS SENDER_MAIL,
		    PREV_NO,
		    MAILBOX_NO,
		    TITLE,
		    CONTENT,
		    SEND_DATE,
		    MAIL_RECIPIENT.READ_CHECK AS READ_CHECK,
		    MAIL_RECIPIENT.DELETE_CHECK AS DELETE_CHECK,
		    MAIL_RECIPIENT.RECEIVER_NO AS RECEIVER_NO
		FROM MAIL M
		    JOIN "USER" ON M.SENDER = "USER".NO
		    LEFT OUTER JOIN MAIL_RECIPIENT ON M.NO = MAIL_RECIPIENT.MAIL_NO
		    LEFT OUTER JOIN MAIL_CC ON M. NO = MAIL_CC.MAIL_NO
		WHERE RECEIVER_NO = (SELECT NO FROM "USER" WHERE MAIL = #{mail})
		    OR CC_NO = (SELECT NO FROM "USER" WHERE MAIL = #{mail})
		    AND DELETE_CHECK = 'X'
	    ORDER BY SEND_DATE DESC
	
	</select>
	
	<select id="getAllMailCount" resultType="String">
	
		SELECT COUNT(M.NO)
		FROM MAIL M
		    JOIN "USER" ON M.SENDER = "USER".NO
		    left OUTER JOIN MAIL_RECIPIENT ON M.NO = MAIL_RECIPIENT.MAIL_NO
		    FULL OUTER JOIN MAIL_CC ON M. NO = MAIL_CC.MAIL_NO
		WHERE DELETE_CHECK = 'X'
			AND RECEIVER_NO = (SELECT NO FROM "USER" WHERE MAIL = #{mail})
		    OR CC_NO = (SELECT NO FROM "USER" WHERE MAIL = #{mail})
		     
	</select>
	
	<select id="getUnreadMailCount" resultType="String">
	
		SELECT COUNT(M.NO)
		FROM MAIL M
		    JOIN "USER" ON M.SENDER = "USER".NO
		    left OUTER JOIN MAIL_RECIPIENT ON M.NO = MAIL_RECIPIENT.MAIL_NO
		    FULL OUTER JOIN MAIL_CC ON M. NO = MAIL_CC.MAIL_NO
		WHERE READ_CHECK = 'X'
			AND DELETE_CHECK = 'X'
			AND RECEIVER_NO = (SELECT NO FROM "USER" WHERE MAIL = #{mail})
		    OR CC_NO = (SELECT NO FROM "USER" WHERE MAIL = #{mail})
		    
	</select>
	
	
	<select id="getReceiveMailList" resultType="MailVo">
		SELECT
		    DISTINCT MAIL.NO,
		    "USER".NAME AS SENDER_NAME,
		    "USER".MAIL AS SENDER_MAIL,
		    PREV_NO,
		    MAILBOX_NO,
		    TITLE,
		    CONTENT,
		    SEND_DATE,
		    MAIL_RECIPIENT.READ_CHECK AS READ_CHECK,
		    MAIL_RECIPIENT.DELETE_CHECK AS DELETE_CHECK,
		    MAIL_RECIPIENT.RECEIVER_NO AS RECEIVER_NO
		FROM MAIL
		    JOIN "USER" ON MAIL.SENDER = "USER".NO
		    JOIN MAIL_RECIPIENT ON MAIL.NO = MAIL_RECIPIENT.MAIL_NO
		WHERE RECEIVER_NO = (SELECT NO FROM "USER" WHERE MAIL = #{receiverMail})
            AND DELETE_CHECK = 'X'
        ORDER BY SEND_DATE DESC
	</select>
	
	
	<select id="getSendMailList" resultType="MailVo">
	
		SELECT 
		    DISTINCT M.NO,
		    "USER".NAME AS SENDER_NAME,
		    "USER".MAIL AS SENDER_MAIL,
		    PREV_NO,
		    MAILBOX_NO,
		    TITLE,
		    CONTENT,
		    SEND_DATE
		FROM MAIL M
		    JOIN "USER" ON M.SENDER = "USER".NO
		WHERE M.SENDER = ( 
							SELECT NO 
							FROM "USER" 
							WHERE MAIL = #{mail} 
						)
		ORDER BY SEND_DATE DESC
	
	</select>
	
	
	<select id="getToMeMailList" resultType="MailVo">
	
		SELECT 
		    DISTINCT M.NO,
		    "USER".NAME AS SENDER_NAME,
		    "USER".MAIL AS SENDER_MAIL,
		    PREV_NO,
		    MAILBOX_NO,
		    TITLE,
		    CONTENT,
		    SEND_DATE,
		    MAIL_RECIPIENT.READ_CHECK AS READ_CHECK,
		    MAIL_RECIPIENT.DELETE_CHECK AS DELETE_CHECK,
		    MAIL_RECIPIENT.RECEIVER_NO AS RECEIVER_NO
		FROM MAIL M
		    JOIN "USER" ON M.SENDER = "USER".NO
		    JOIN MAIL_RECIPIENT ON M.NO = MAIL_RECIPIENT.MAIL_NO
		WHERE M.SENDER = ( SELECT NO FROM "USER" WHERE MAIL = 'dlwlrma@zoody.co.kr' )
		    AND RECEIVER_NO = (SELECT NO FROM "USER" WHERE MAIL = 'dlwlrma@zoody.co.kr')
		    AND DELETE_CHECK = 'X'
	    ORDER BY SEND_DATE DESC
	
	</select>
	
	
	<select id="getMailDetailByNo" resultType="MailVo">
	
		SELECT 
			M.NO,
			U.NAME AS "SENDER",
			PREV_NO,
			MAILBOX_NO,
			TITLE,
			CONTENT,
			SEND_DATE
		FROM MAIL M
			JOIN "USER" U ON M.SENDER = U.NO
		WHERE M.NO = #{no}
	
	</select>
	
	<update id="readCheck">
		
		UPDATE MAIL_RECIPIENT
		SET READ_CHECK = 'O'
		WHERE MAIL_NO = #{mailNo}
		    AND RECEIVER_NO = (SELECT NO FROM "USER" WHERE MAIL = #{userMail})
		
	</update>
	
	
	<select id="getMailRecipientByMailNo" resultType="UserVo">
	
		SELECT U.NAME, U.MAIL
		FROM "USER" U
		WHERE U.NO IN (
		    SELECT RECEIVER_NO
		    FROM MAIL_RECIPIENT
		    WHERE MAIL_NO = #{no}
		    )
	
	</select>
  
  
  	<select id="getMailCcByMailNo" resultType="UserVo">
	
		SELECT U.NAME, U.MAIL
		FROM "USER" U
		WHERE U.NO IN (
			    SELECT CC_NO
			    FROM MAIL_CC
			    WHERE MAIL_NO = #{no}
			    AND BCC_CHECK = 'X'
		    )
		    
	</select>
  
  
  	<update id="mailListReadCheck">
		
		<foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close="; END;">
			UPDATE MAIL_RECIPIENT
			SET READ_CHECK = 'O'
			<where>
				MAIL_NO = #{item.mailNo}
			    AND RECEIVER_NO = (SELECT NO FROM "USER" WHERE MAIL = #{item.userMail})
			</where>
		</foreach>
  	
  	</update>
  	
  	
  	<update id="mailListDump">
		
		<foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close="; END;">
			UPDATE MAIL_RECIPIENT
			SET DELETE_CHECK = 'O'
			<where>
				MAIL_NO = #{item.mailNo}
			    AND RECEIVER_NO = (SELECT NO FROM "USER" WHERE MAIL = #{item.userMail})
			</where>
		</foreach>
  	
  	</update>
  	
  	
  	<update id="mailBookmark">
  	
  		
  	
  	</update>
  
</mapper>