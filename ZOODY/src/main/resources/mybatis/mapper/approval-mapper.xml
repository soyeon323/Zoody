<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="approval">

	<select id="getDocumentForm" resultType="String">
	
		SELECT FORM
		FROM APPROVAL_CATEGORY
		WHERE NO = #{category}
	
	</select>
	
	
	<insert id="insertApproval">
	
		<selectKey resultType="String" keyProperty="no" order="BEFORE">
			SELECT SEQ_ELECTRONIC_APPROVAL_NO.NEXTVAL
			FROM DUAL
		</selectKey>
	
		INSERT INTO ELECTRONIC_APPROVAL
		(
			NO,
			DRAFTER,
			CATEGORY_NO,
			REQUEST_DATE,
			TITLE
		)
		VALUES
		(
			#{no},
			#{drafter},
			#{categoryNo},
			SYSDATE,
			#{title}
		)
		
	</insert>


	<insert id="insertApprover">
		
		INSERT INTO APPROVER
		(
			NO,
			APPROVAL_NO,
			APPROVAL_STATE,
			APPROVER_NO,
			NEXT_APPROVAER_NO,
			APPROVAL_DATE
		)
		SELECT 
			SEQ_APPROVER_NO.NEXTVAL,
			TEMP.* FROM 
			(
				<foreach item="item" collection="list" separator="UNION ALL " >
				SELECT 
					#{item.approvalNo} AS APPROVAL_NO,
					0,
					#{item.approverNo} AS APPROVER_NO,
					#{item.nextApprovaerNo} AS NEXT_APPROVAER_NO,
					SYSDATE
				FROM DUAL
				</foreach>
			) TEMP
	
	</insert>


	<insert id="insertCC">
	
		<foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM SYS.DUAL" separator=" " >
			INTO APPROVAL_CC
			(
				NO,
				CC_NO
			)
			VALUES (
				#{item.no},
				#{item.ccNo}
			)
		</foreach>
	
	</insert>


	<insert id="insertLOA">
	
		INSERT INTO LETTER_OF_APPROVAL
		(
			NO,
			APPROVAL_NO,
			CONTENT,
			INSTRUCTION
		)
		VALUES
		(
			SEQ_LETTER_OF_APPROVAL.NEXTVAL,
			#{approvalNo},
			#{content},
			null
		)
	
	</insert>
	
	
	<select id="getLeaveType" resultType="LeaveTypeVo">
	
		SELECT NO, TYPE
		FROM LEAVE_TYPE 
	
	</select>	
	
	<insert id="insertAFL">
	
		INSERT INTO APPLICATION_FOR_LEAVE
		(
			"NO",
			"APPROVAL_NO",
			"TYPE_NO",
			"REASON",
			"FROM",
			"TO"
		)
		VALUES
		(
			SEQ_APPLICATION_FOR_LEAVE_NO.NEXTVAL,
			#{approvalNo},
			#{typeNo},
			#{reason},
			#{from},
			#{to}
		)
	
	</insert>
	
	<select id="getWorkType" resultType="ExtraWorkCategoryVo">
	
		SELECT NO,CATEGORY
		FROM EXTRA_WORK_CATEGORY
	
	</select>
	
	<insert id="insertAFE">
	
		INSERT INTO APPLICATION_FOR_EXTRA_WORK
		(
			"NO",
			"APPROVAL_NO",
			"CATEGORY_NO",
			"DATE",
			"START_TIME",
			"END_TIME",
			"REASON"
		)
		VALUES
		(
			SEQ_APP_FOR_EXTRA_WORK_NO.NEXTVAL,
			#{approvalNo},
			#{categoryNo},
			#{date},
			#{startTime},
			#{endTime},
			#{reason}
		)
	
	</insert>
	
	
	<select id="getApprovalList" resultType="ApprovalVo">
	
		SELECT EA.NO, DRAFTER, U.NAME AS DRAFTER_NAME, CATEGORY_NO, AC.CATEGORY AS CATEGORY_NAME, REQUEST_DATE, TITLE
		FROM ELECTRONIC_APPROVAL EA
		    JOIN "USER" U ON EA.DRAFTER = U.NO
		    JOIN APPROVAL_CATEGORY AC ON EA.CATEGORY_NO = AC.NO
		WHERE EA.NO IN ( SELECT APPROVAL_NO
		                FROM APPROVER
		                WHERE APPROVER_NO = #{userNo}
		                )
	
	</select>
	
	
	
	<select id="getApprovalDetail" resultType="ApprovalVo">
	
		SELECT EA.NO, DRAFTER, CATEGORY_NO, REQUEST_DATE, TITLE, CATEGORY AS CATEGORY_NAME, FORM
		FROM ELECTRONIC_APPROVAL EA
		    JOIN APPROVAL_CATEGORY AC ON EA.CATEGORY_NO = AC.NO
		WHERE EA.NO = #{no}
	
	</select>
	
	
	<select id="getDrafterInfo" resultType="DrafterVo">
	
		SELECT U.NAME, B.D_NAME1, B.D_NAME2, B.D_NAME3, B.D_NAME4, TO_CHAR(REQUEST_DATE, 'YYYY-MM-DD (DAY)') AS DRAFTER_DATE, EA.NO AS EA_NO, R.NAME AS RANK_NAME
		FROM "USER" U
		    JOIN ELECTRONIC_APPROVAL EA ON U.NO = EA.DRAFTER
		    JOIN "RANK" R ON U.RANK_NO = R.NO
		    JOIN (
		            SELECT D.NO AS TOP_MOST_NO, A.NAME AS D_NAME1, B.NAME AS D_NAME2, C.NAME AS D_NAME3, D.NAME AS D_NAME4
		            FROM DEPARTMENT A
		                RIGHT JOIN DEPARTMENT B ON A.NO = B.UPPER_DEPARTMENT_NO
		                RIGHT JOIN DEPARTMENT C ON B.NO = C.UPPER_DEPARTMENT_NO
		                RIGHT JOIN DEPARTMENT D ON C.NO = D.UPPER_DEPARTMENT_NO
		        ) B ON U.DEPARTMENT_NO = B.TOP_MOST_NO
		WHERE EA.NO = #{no}
	
	</select>
	
	
	<select id="getCategory" resultType="String">
	
		SELECT CATEGORY_NO
		FROM ELECTRONIC_APPROVAL
		WHERE NO = #{no}
	
	</select>	
	
	
	<select id="getDetailLOA" resultType="LetterOfApprovalVo">
	
		SELECT TITLE, CONTENT, INSTRUCTION
		FROM ELECTRONIC_APPROVAL EA
		    JOIN LETTER_OF_APPROVAL LOA ON EA.NO = LOA.APPROVAL_NO
		WHERE EA.NO = #{no}
	
	</select>
	
	<select id="getDetailAFL" resultType="ApprovalVo">
	
	
	
	</select>
	
	<select id="getDetailAFE" resultType="ApprovalVo">
	
	
	
	</select>
	
	<select id="getDetailAFS" resultType="ApprovalVo">
	
	
	
	</select>
	
	
	<select id="getApprovers" resultType="ApproverVo">
	
		SELECT U.NO AS APPROVER_NO, APPROVAL_STATE, U.NAME, PROFILE, R.NAME AS RANK_NAME, B.D_NAME1, B.D_NAME2, B.D_NAME3, B.D_NAME4
		FROM APPROVER A
		    JOIN "USER" U ON A.APPROVER_NO = U.NO 
		    JOIN "RANK" R ON U.RANK_NO = R.NO
		    JOIN (
		            SELECT D.NO AS TOP_MOST_NO, A.NAME AS D_NAME1, B.NAME AS D_NAME2, C.NAME AS D_NAME3, D.NAME AS D_NAME4
		            FROM DEPARTMENT A
		                RIGHT JOIN DEPARTMENT B ON A.NO = B.UPPER_DEPARTMENT_NO
		                RIGHT JOIN DEPARTMENT C ON B.NO = C.UPPER_DEPARTMENT_NO
		                RIGHT JOIN DEPARTMENT D ON C.NO = D.UPPER_DEPARTMENT_NO
		        ) B ON U.DEPARTMENT_NO = B.TOP_MOST_NO
		WHERE APPROVAL_NO = #{no}
	
	</select>
	
	
	<select id="getCc" resultType="ApproverVo">
	
		SELECT U.NAME, PROFILE, R.NAME AS RANK_NAME, B.D_NAME1, B.D_NAME2, B.D_NAME3, B.D_NAME4
		FROM APPROVAL_CC A
		    JOIN "USER" U ON A.CC_NO = U.NO 
		    JOIN "RANK" R ON U.RANK_NO = R.NO
		    JOIN (
		            SELECT D.NO AS TOP_MOST_NO, A.NAME AS D_NAME1, B.NAME AS D_NAME2, C.NAME AS D_NAME3, D.NAME AS D_NAME4
		            FROM DEPARTMENT A
		                RIGHT JOIN DEPARTMENT B ON A.NO = B.UPPER_DEPARTMENT_NO
		                RIGHT JOIN DEPARTMENT C ON B.NO = C.UPPER_DEPARTMENT_NO
		                RIGHT JOIN DEPARTMENT D ON C.NO = D.UPPER_DEPARTMENT_NO
		        ) B ON U.DEPARTMENT_NO = B.TOP_MOST_NO
		WHERE A.NO = #{no}	
		
	</select>
	
	
	<update id="dicisionUpdate">
	
		UPDATE APPROVER
		SET APPROVAL_STATE = #{dicisionNo},
		    APPROVAL_DATE = SYSDATE
		WHERE APPROVER_NO = #{no}
	
	</update>
	
	
	<update id="instructionUpdate">
	
		UPDATE LETTER_OF_APPROVAL
		SET INSTRUCTION = #{instruction}
		WHERE APPROVAL_NO = #{no}
	
	</update>

</mapper>
