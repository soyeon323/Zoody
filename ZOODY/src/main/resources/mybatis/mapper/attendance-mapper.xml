<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="attendance">

	<!-- 내 출퇴근 목록 페이징 -->
	<select id="getMyAttendanceCnt" resultType="int">
		SELECT COUNT(A.NO)
		FROM ATTENDANCE A
		JOIN ATTENDANCE_CURRENT AC
		ON A.CURRENT_NO = AC.NO
		WHERE USER_NO=1
		<if test="searchValue != null and searchValue != ''">
			AND AC.TYPE LIKE '%${searchValue}%'
		</if>
	</select>

	<!-- 내 출퇴근 목록 -->
	<select id="selectList" resultType="AttendanceVo">
		SELECT 
		    A.NO
		    ,A.USER_NO
		    ,A.CURRENT_NO
		    ,TO_CHAR(A.ENROLLDATE, 'YYYY-MM-DD') AS ENROLLDATE
		    ,NVL(TO_CHAR(A.CHECK_IN_TIME, 'HH24:MI:SS'), '00:00:00') AS CHECK_IN_TIME
		    ,NVL(TO_CHAR(A.CHECK_OUT_TIME, 'HH24:MI:SS'), '00:00:00') AS CHECK_OUT_TIME
		    ,TRUNC(
		    CASE 
	                    WHEN TRUNC(EXTRACT(DAY FROM A.PLUS_WORK_TIME)) = 0 THEN NULL
	                    ELSE TRUNC(EXTRACT(DAY FROM A.PLUS_WORK_TIME)) || '일 '
	                END
	            ) ||
		    EXTRACT(HOUR FROM A.PLUS_WORK_TIME) || '시간 ' ||
		    EXTRACT(MINUTE FROM A.PLUS_WORK_TIME) || '분 ' ||
		    EXTRACT(SECOND FROM A.PLUS_WORK_TIME) || '초' AS PLUS_WORK_TIME
		    ,TO_CHAR(A.CHECK_OUT_TIME - A.CHECK_IN_TIME + A.PLUS_WORK_TIME, 'HH24:MI:SS') AS TOTAL_WORK_TIME
		    ,A.OBJECTION_REASON
		    ,A.APPROVAL_STATUS
		    ,AC.TYPE AS TYPE
		    ,U.NAME AS NAME
		FROM ATTENDANCE A
		JOIN "USER" U
		ON A.USER_NO = U.NO
		JOIN ATTENDANCE_CURRENT AC
		ON A.CURRENT_NO = AC.NO
		WHERE U.NO = 1
		<if test="searchValue != null and searchValue != ''">
			AND AC.TYPE LIKE '%${searchValue}%'
		</if>
		ORDER BY ENROLLDATE DESC
	</select>
	
	<!-- 휴가 요청 목록 페이징 -->
	<select id="getLeaveCnt" resultType="int">
		SELECT COUNT(NO)
		FROM LEAVE
		WHERE USER_NO = 1
	</select>
	
	<!-- 휴가 요청 목록 조회 -->
	<select id="selectLeaveList" resultType="com.kh.zoody.attendance.vo.LeaveVo">
		SELECT 
		    L.NO
		    ,L.USER_NO
		    ,L.LEAVE_NO
		    ,L.PROXY_NO
		    ,TO_CHAR(L.ENROLLDATE, 'YYYY-MM-DD') AS ENROLLDATE
		    ,L.REASON_CONTENT
		    ,TO_CHAR(L.START_TIME, 'YYYY-MM-DD') AS START_TIME
		    ,TO_CHAR(L.END_TIME, 'YYYY-MM-DD') AS END_TIME
		    ,L.STATUS
		    ,LT.TYPE
		FROM LEAVE L
		JOIN "USER" U
		ON U.NO = L.USER_NO
		JOIN LEAVE_TYPE LT
		ON LT.NO = L.LEAVE_NO
		WHERE U.NO = 1
		ORDER BY L.NO DESC
	</select>
	
	<!-- 모든 회원 근태 조회 목록 페이징 -->
	<select id="getAllAttendanceCnt" resultType="int">
		SELECT COUNT(NO)
		FROM ATTENDANCE
	</select>
	
	<!-- 모든 회원 근태 목록 조회 -->
	<select id="selectAllList" resultType="AttendanceVo">
		SELECT 
			    A.NO
			    ,A.USER_NO
			    ,A.CURRENT_NO
			    ,TO_CHAR(A.ENROLLDATE, 'YYYY-MM-DD') AS ENROLLDATE
			    ,NVL(TO_CHAR(A.CHECK_IN_TIME, 'HH24:MI:SS'), '00:00:00') AS CHECK_IN_TIME
			    ,NVL(TO_CHAR(A.CHECK_OUT_TIME, 'HH24:MI:SS'), '00:00:00') AS CHECK_OUT_TIME
			    ,TRUNC(
	                    CASE 
	                    WHEN TRUNC(EXTRACT(DAY FROM A.PLUS_WORK_TIME)) = 0 THEN NULL
	                    ELSE TRUNC(EXTRACT(DAY FROM A.PLUS_WORK_TIME)) || '일 '
	                END
	            ) ||
			    EXTRACT(HOUR FROM A.PLUS_WORK_TIME) || '시간 ' ||
			    EXTRACT(MINUTE FROM A.PLUS_WORK_TIME) || '분 ' ||
			    EXTRACT(SECOND FROM A.PLUS_WORK_TIME) || '초' AS PLUS_WORK_TIME
			    ,TO_CHAR(A.CHECK_OUT_TIME - A.CHECK_IN_TIME + A.PLUS_WORK_TIME, 'HH24:MI:SS') AS TOTAL_WORK_TIME
			    ,A.OBJECTION_REASON
			    ,A.APPROVAL_STATUS
			    ,AC.TYPE AS TYPE
			    ,U.NAME AS NAME
	            ,D.NAME AS DEPARTMENT_NAME
	            ,P.NAME AS POSITION_NAME
	            ,R.NAME AS RANK_NAME
	            ,US.NAME AS USER_STATE_NAME
		FROM ATTENDANCE A
		JOIN "USER" U
		ON A.USER_NO = U.NO
		JOIN ATTENDANCE_CURRENT AC
		ON A.CURRENT_NO = AC.NO
        JOIN DEPARTMENT D 
        ON U.DEPARTMENT_NO = D.NO
        JOIN RANK R
        ON R.NO = U.RANK_NO
        JOIN USER_STATE US
        ON US.NO = U.STATE_NO
        JOIN POSITION P
        ON P.NO = U.POSITION_NO
        WHERE US.NAME = '정상'
		ORDER BY ENROLLDATE DESC
	</select>
	
	<!-- 메인 내 출결 조회 페이징 -->
	<select id="getMainAttCnt" resultType="int">
		SELECT COUNT(NO)
		FROM ATTENDANCE
		WHERE USER_NO=1
	</select>
	
	<!-- 메인 내 휴가 조회 페이징 -->
	<select id="getMainLeaveCnt" resultType="int">
	 	SELECT COUNT(NO)
	 	FROM LEAVE
	 	WHERE USER_NO=1
	</select>
	
	<!-- 메인 내 출결 조회 -->
	<select id="selectMainAttlist" resultType="AttendanceVo">
		SELECT 
		    A.NO
		    ,A.USER_NO
		    ,A.CURRENT_NO
		    ,TO_CHAR(A.ENROLLDATE, 'YYYY-MM-DD') AS ENROLLDATE
		    ,NVL(TO_CHAR(A.CHECK_IN_TIME, 'HH24:MI:SS'), '00:00:00') AS CHECK_IN_TIME
		    ,NVL(TO_CHAR(A.CHECK_OUT_TIME, 'HH24:MI:SS'), '00:00:00') AS CHECK_OUT_TIME
		    ,TRUNC(
		    CASE 
	                    WHEN TRUNC(EXTRACT(DAY FROM A.PLUS_WORK_TIME)) = 0 THEN NULL
	                    ELSE TRUNC(EXTRACT(DAY FROM A.PLUS_WORK_TIME)) || '일 '
	                END
	            ) ||
		    EXTRACT(HOUR FROM A.PLUS_WORK_TIME) || '시간 ' ||
		    EXTRACT(MINUTE FROM A.PLUS_WORK_TIME) || '분 ' ||
		    EXTRACT(SECOND FROM A.PLUS_WORK_TIME) || '초' AS PLUS_WORK_TIME
		    ,TO_CHAR(A.CHECK_OUT_TIME - A.CHECK_IN_TIME + A.PLUS_WORK_TIME, 'HH24:MI:SS') AS TOTAL_WORK_TIME
		    ,A.OBJECTION_REASON
		    ,A.APPROVAL_STATUS
		    ,AC.TYPE AS TYPE
		    ,U.NAME AS NAME
		FROM ATTENDANCE A
		JOIN "USER" U
		ON A.USER_NO = U.NO
		JOIN ATTENDANCE_CURRENT AC
		ON A.CURRENT_NO = AC.NO
		WHERE U.NO = 1
		ORDER BY CHECK_IN_TIME DESC
	</select>
	
	<!-- 메인 내 휴가 요청 조회 -->
	<select id="selectMainLeList" resultType="com.kh.zoody.attendance.vo.LeaveVo">
		SELECT 
		    L.NO
		    ,L.USER_NO
		    ,L.LEAVE_NO
		    ,L.PROXY_NO
		    ,TO_CHAR(L.ENROLLDATE, 'YYYY-MM-DD') AS ENROLLDATE
		    ,L.REASON_CONTENT
		    ,TO_CHAR(L.START_TIME, 'YYYY-MM-DD') AS START_TIME
		    ,TO_CHAR(L.END_TIME, 'YYYY-MM-DD') AS END_TIME
		    ,L.STATUS
		    ,LT.TYPE
		FROM LEAVE L
		JOIN "USER" U
		ON U.NO = L.USER_NO
		JOIN LEAVE_TYPE LT
		ON LT.NO = L.LEAVE_NO
		WHERE U.NO = 1
		ORDER BY L.NO DESC
	</select>
	
	<!-- 관리자 이의신청 목록 조회 -->
	<select id="selectObjList" resultType="AttendanceVo">
		SELECT 
		    A.NO
		    ,A.USER_NO
		    ,A.CURRENT_NO
		    ,TO_CHAR(A.ENROLLDATE, 'YYYY-MM-DD') AS ENROLLDATE
		    ,NVL(TO_CHAR(A.CHECK_IN_TIME, 'HH24:MI:SS'), '00:00:00') AS CHECK_IN_TIME
		    ,NVL(TO_CHAR(A.CHECK_OUT_TIME, 'HH24:MI:SS'), '00:00:00') AS CHECK_OUT_TIME
		    ,TRUNC(
                    CASE 
                    WHEN TRUNC(EXTRACT(DAY FROM A.PLUS_WORK_TIME)) = 0 THEN NULL
                    ELSE TRUNC(EXTRACT(DAY FROM A.PLUS_WORK_TIME)) || '일 '
                END
            ) ||
		    EXTRACT(HOUR FROM A.PLUS_WORK_TIME) || '시간 ' ||
		    EXTRACT(MINUTE FROM A.PLUS_WORK_TIME) || '분 ' ||
		    EXTRACT(SECOND FROM A.PLUS_WORK_TIME) || '초' AS PLUS_WORK_TIME
		    ,TO_CHAR(A.CHECK_OUT_TIME - A.CHECK_IN_TIME + A.PLUS_WORK_TIME, 'HH24:MI:SS') AS TOTAL_WORK_TIME
		    ,A.OBJECTION_REASON
		    ,A.APPROVAL_STATUS
		    ,AC.TYPE AS TYPE
		    ,U.NAME AS NAME
            ,D.NAME AS DEPARTMENT_NAME
            ,P.NAME AS POSITION_NAME
            ,R.NAME AS RANK_NAME
            ,US.NAME AS USER_STATE_NAME
		FROM ATTENDANCE A
		JOIN "USER" U
		ON A.USER_NO = U.NO
		JOIN ATTENDANCE_CURRENT AC
		ON A.CURRENT_NO = AC.NO
        JOIN DEPARTMENT D 
        ON U.DEPARTMENT_NO = D.NO
        JOIN RANK R
        ON R.NO = U.RANK_NO
        JOIN USER_STATE US
        ON US.NO = U.STATE_NO
        JOIN POSITION P
        ON P.NO = U.POSITION_NO
        WHERE US.NAME = '정상'
        AND A.OBJECTION_REASON IS NOT NULL
		ORDER BY ENROLLDATE DESC
	</select>
	
	<!-- 이의신청 목록 페이징 -->
	<select id="getObjCnt" resultType="int">
        SELECT
            COUNT(A.NO) AS NO
        FROM ATTENDANCE A
        JOIN "USER" U
        ON A.USER_NO = U.NO
        JOIN USER_STATE US
        ON US.NO = U.STATE_NO
        WHERE US.NAME = '정상'
        AND A.OBJECTION_REASON IS NOT NULL
	</select>

	<!-- 부서별 목록 조회 -->	
	<select id="selectMainDeList" resultType="AttendanceVo">
		SELECT 
		    A.NO
		    ,A.USER_NO
		    ,A.CURRENT_NO
		    ,TO_CHAR(A.ENROLLDATE, 'YYYY-MM-DD') AS ENROLLDATE
		    ,NVL(TO_CHAR(A.CHECK_IN_TIME, 'HH24:MI:SS'), '00:00:00') AS CHECK_IN_TIME
		    ,NVL(TO_CHAR(A.CHECK_OUT_TIME, 'HH24:MI:SS'), '00:00:00') AS CHECK_OUT_TIME
		    ,TRUNC(
		            CASE 
		            WHEN TRUNC(EXTRACT(DAY FROM A.PLUS_WORK_TIME)) = 0 THEN NULL
		            ELSE TRUNC(EXTRACT(DAY FROM A.PLUS_WORK_TIME)) || '일 '
		        END
		    ) ||
		    EXTRACT(HOUR FROM A.PLUS_WORK_TIME) || '시간 ' ||
		    EXTRACT(MINUTE FROM A.PLUS_WORK_TIME) || '분 ' ||
		    EXTRACT(SECOND FROM A.PLUS_WORK_TIME) || '초' AS PLUS_WORK_TIME
		    ,TO_CHAR(A.CHECK_OUT_TIME - A.CHECK_IN_TIME + A.PLUS_WORK_TIME, 'HH24:MI:SS') AS TOTAL_WORK_TIME
		    ,A.OBJECTION_REASON
		    ,A.APPROVAL_STATUS
		    ,AC.TYPE AS TYPE
		    ,U.NAME AS NAME
		    ,D.NAME AS DEPARTMENT_NAME
		    ,P.NAME AS POSITION_NAME
		    ,R.NAME AS RANK_NAME
		    ,US.NAME AS USER_STATE_NAME
		FROM ATTENDANCE A
		JOIN "USER" U
		ON A.USER_NO = U.NO
		JOIN ATTENDANCE_CURRENT AC
		ON A.CURRENT_NO = AC.NO
		JOIN DEPARTMENT D 
		ON U.DEPARTMENT_NO = D.NO
		JOIN RANK R
		ON R.NO = U.RANK_NO
		JOIN USER_STATE US
		ON US.NO = U.STATE_NO
		JOIN POSITION P
		ON P.NO = U.POSITION_NO
		WHERE US.NAME = '정상'
		AND U.DEPARTMENT_NO = 1
		AND TRUNC(A.ENROLLDATE) = TRUNC(SYSDATE)
		ORDER BY CHECK_IN_TIME DESC
	</select>
	
	<!-- 출근 기록 -->
	<insert id="checkInWork">
	    INSERT INTO ATTENDANCE (
	        NO, 
	        USER_NO, 
	        CURRENT_NO,
	        ENROLLDATE,
	        CHECK_IN_TIME,
	        CHECK_OUT_TIME, 
	        OBJECTION_REASON
	    ) 
	    VALUES (
	        SEQ_ATTENDANCE_NO.NEXTVAL,
	        #{loginMemberNo},
	        CASE 
	            WHEN TO_CHAR(CURRENT_TIMESTAMP, 'HH24:MI') &gt;= '09:01' AND TO_CHAR(CURRENT_TIMESTAMP, 'HH24:MI') &lt;= '23:59' THEN 6
	            ELSE 1
	        END,
	        CURRENT_TIMESTAMP,
	        CURRENT_TIMESTAMP,
	        null,
	        null
	    )
	</insert>

	<update id="checkOutWork">
	    UPDATE ATTENDANCE
	    SET CHECK_OUT_TIME = CURRENT_TIMESTAMP
	    WHERE USER_NO = #{loginMemberNo}
	    AND TO_CHAR(CHECK_IN_TIME, 'YYYY-MM-DD') = TO_CHAR(CURRENT_TIMESTAMP, 'YYYY-MM-DD')
	    AND CHECK_OUT_TIME IS NULL
	</update>
  
  	<select id="selectChartList" resultType="AttendanceVo">
  		SELECT 
        TO_CHAR(A.ENROLLDATE, 'YYYY-MM-DD') AS ENROLLDATE,
        TO_CHAR(A.CHECK_OUT_TIME - A.CHECK_IN_TIME + A.PLUS_WORK_TIME, 'HH24:MI:SS') AS TOTAL_WORK_TIME
        FROM ATTENDANCE A
        JOIN "USER" U ON A.USER_NO = U.NO
        JOIN ATTENDANCE_CURRENT AC ON A.CURRENT_NO = AC.NO
        WHERE U.NO = 1
        ORDER BY A.CHECK_IN_TIME DESC
  	</select>
  	
  	<select id="selectCalendarList" resultType="AttendanceVo">
  		SELECT 
		    A.NO
		    ,A.USER_NO
		    ,A.CURRENT_NO
		    ,TO_CHAR(A.ENROLLDATE, 'YYYY-MM-DD') AS ENROLLDATE
		    ,NVL(TO_CHAR(A.CHECK_IN_TIME, 'HH24:MI:SS'), '00:00:00') AS CHECK_IN_TIME
		    ,NVL(TO_CHAR(A.CHECK_OUT_TIME, 'HH24:MI:SS'), '00:00:00') AS CHECK_OUT_TIME
		    ,TRUNC(
		    CASE 
	                    WHEN TRUNC(EXTRACT(DAY FROM A.PLUS_WORK_TIME)) = 0 THEN NULL
	                    ELSE TRUNC(EXTRACT(DAY FROM A.PLUS_WORK_TIME)) || '일 '
	                END
	            ) ||
		    EXTRACT(HOUR FROM A.PLUS_WORK_TIME) || '시간 ' ||
		    EXTRACT(MINUTE FROM A.PLUS_WORK_TIME) || '분 ' ||
		    EXTRACT(SECOND FROM A.PLUS_WORK_TIME) || '초' AS PLUS_WORK_TIME
		    ,TO_CHAR(A.CHECK_OUT_TIME - A.CHECK_IN_TIME + A.PLUS_WORK_TIME, 'HH24:MI:SS') AS TOTAL_WORK_TIME
		    ,A.OBJECTION_REASON
		    ,A.APPROVAL_STATUS
		    ,AC.TYPE AS TYPE
		    ,U.NAME AS NAME
		FROM ATTENDANCE A
		JOIN "USER" U
		ON A.USER_NO = U.NO
		JOIN ATTENDANCE_CURRENT AC
		ON A.CURRENT_NO = AC.NO
		WHERE U.NO = 1
  	</select>
  	
  	<select id="getCurrentTypeOneCnt" resultType="int">
  		SELECT 
		    COUNT(A.CURRENT_NO)
		FROM ATTENDANCE A
		JOIN ATTENDANCE_CURRENT AC
		ON A.CURRENT_NO = AC.NO
		WHERE USER_NO=1
		AND AC.NO = 1
  	</select>
  	
  	<select id="getCurrentTypeSixCnt" resultType="int">
  		SELECT 
		    COUNT(A.CURRENT_NO)
		FROM ATTENDANCE A
		JOIN ATTENDANCE_CURRENT AC
		ON A.CURRENT_NO = AC.NO
		WHERE USER_NO=1
		AND AC.NO = 6
  	</select>
  	
  	<select id="getCurrentTypeFourCnt" resultType="int">
  		SELECT 
		    COUNT(A.CURRENT_NO)
		FROM ATTENDANCE A
		JOIN ATTENDANCE_CURRENT AC
		ON A.CURRENT_NO = AC.NO
		WHERE USER_NO=1
		AND AC.NO = 4
  	</select>
  	
  	<select id="getCurrentTypeLeaveCnt" resultType="int">
  		SELECT COUNT(NO)
		FROM LEAVE
		WHERE USER_NO = 1
  	</select>
  	
  	
  
</mapper>

















